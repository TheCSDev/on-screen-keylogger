//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace on_screen_keylogger.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("on_screen_keylogger.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;
        ///		&lt;script src=&quot;script.js&quot; defer&gt;&lt;/script&gt;
        ///	&lt;/head&gt;
        ///
        ///	&lt;body&gt;
        ///		&lt;style&gt;
        ///			html, body
        ///			{
        ///				width: 100%;
        ///				height: 100%;
        ///				margin: 0;
        ///				
        ///				overflow: hidden;
        ///				background-color: black;
        ///				color: white;
        ///			}
        ///
        ///			button
        ///			{
        ///				background-color: #333333;
        ///				border: 1px;
        ///				border-color: black;
        ///				border-style: solid;
        ///				color: white;
        ///				font-size: 10px;
        ///				
        ///				user-select: none;
        ///				posit [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string layout_default {
            get {
                return ResourceManager.GetString("layout_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///	&lt;style&gt;
        ///		html { background-color: #333333; }
        ///		body { color: #cccccc; }
        ///		button
        ///		{
        ///			background-color: #4CAF50;
        ///			border: none;
        ///			color: white;
        ///			padding: 8px 16px;
        ///			text-align: center;
        ///			text-decoration: none;
        ///			display: inline-block;
        ///			font-size: 12px;
        ///			margin: 4px 2px;
        ///			cursor: pointer;
        ///			border-radius: 5px;
        ///		}
        ///	&lt;/style&gt;
        ///	
        ///	&lt;script defer&gt;
        ///		const clamp = (num, min, max) =&gt; Math.min(Math.max(num, min), max);
        ///		function GoBack() { history.bac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string layout_settings {
            get {
                return ResourceManager.GetString("layout_settings", resourceCulture);
            }
        }
    }
}
